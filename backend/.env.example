# Environment configuration for GYST Backend API

# Enhanced RAG Configuration (prefixed to avoid conflicts with main settings)
RAG_ENABLE_ENHANCED_RAG=true
RAG_EMBEDDING_CACHE_DB_PATH=./data/embedding_cache.db
RAG_GEMINI_EMBEDDING_MODEL=models/text-embedding-004
RAG_MAX_CHUNK_SIZE=512
RAG_CHUNK_OVERLAP_RATIO=0.2
RAG_CACHE_TTL_SECONDS=86400
RAG_ENABLE_SEMANTIC_SCORING=true
RAG_MAX_DOCUMENTS_PER_QUERY=5

# Gemini API Settings
RAG_EMBEDDING_RETRY_ATTEMPTS=3
RAG_EMBEDDING_TIMEOUT_SECONDS=30
RAG_GEMINI_REQUEST_DELAY_MS=100

# Performance Settings
RAG_MAX_BATCH_SIZE=50
RAG_MAX_CONCURRENT_BATCHES=3
RAG_CACHE_WARMING_ENABLED=true
RAG_ADAPTIVE_BATCHING=true

# Memory Management
RAG_MAX_MEMORY_USAGE_MB=500
RAG_MEMORY_PRESSURE_THRESHOLD=0.8
RAG_CHUNK_CACHE_SIZE=100

# Scoring Weights (sum should equal 1.0)
RAG_TAG_SIMILARITY_WEIGHT=0.4
RAG_SEMANTIC_SIMILARITY_WEIGHT=0.3
RAG_CONTENT_RELEVANCE_WEIGHT=0.2
RAG_STRUCTURAL_QUALITY_WEIGHT=0.05
RAG_FRESHNESS_WEIGHT=0.05

# Google AI API Key (add your actual key here)
GOOGLE_API_KEY=your_google_ai_api_key_here
# Same as the above, also required bc at some point the env var was named GEMINI_API_KEY
GEMINI_API_KEY=your_google_ai_api_key_here



# Example usage:
# 1. Copy this file to .env
# 2. Replace the placeholder values with actual configuration
# 3. Obtain a Google AI API key from https://aistudio.google.com/app/apikey
# 4. Set GOOGLE_API_KEY to your actual API key
# 5. Adjust RAG configuration parameters based on your use case and performance requirements
